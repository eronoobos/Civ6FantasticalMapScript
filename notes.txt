- regenerate map if it totally screws up (when there's no second continent, for instance)

---
DONE:
---

- stop having jungles at higher latitudes (are they getting put on plains?)

- add ability to set maxIslandSize (instead of always 3 polygons)

- increase river tile prescription slightly, to account for coming in under the target

- create an algorithm to guess the amount of habitable land per civ, because map size can't be increased after map generation. increase the size of the map if it's too low.

- make it possible for regions to be made of 1 or more subpolygon instead of polygons

river algorithm rework:

calculate the total rainfall for each landmass, and add them up to the total global rainfall
prescribe river area for each landmass proportional to its total rainfall
find river seeds and draw rivers seperately for each landmass
	draw each seed once to collect length data
	sort the drawn rivers using a modifyable weighted metric adding together distance from target area, length, rainfall, and "height" (mountain, hill, or flat)
		to control river length, the first river on each landmass can have a target fraction of the prescribed area. the first river is scored by how close it comes to this target. all rivers beyond max out at the same fraction or the fraction remaining, whichever is smaller, but their score is not affected to encourage a variety of river sizes. nor are non-first rivers' scores affectd by length. to encourage long rivers, the target fraction can be set to 1, for many short rivers, 0.1 or something. if the target area of the landmass is below some minimum, the target fraction becomes 1.
	ink the highest scoring river
	repeat

increase score of rivers that cross deserts

make rivers follow polygon and subpolygon boundaries when possible (but not with annoying major/minor/tiny system)

tweak oasis generation: appear only in tiles with all empty desert (no flood plains) surrounding them, and prescribe a percentage rather than doing a random chance

---

- might want to bring back number of islands as a fraction of possible land

---

- fix 5 ocean rift behaviour for realm maps

- add per-continent limits to simultaneous growth algo, so that if one continent fails to grow, the others don't get too large

- coastal ranges' core hexes should be adjoining interior subpolygons, not adjoining ocean

- mountains and hills can be controlled more easily

	- pick mountain ranges before filling regions

	- reserve a percentage of the prescribed mountains for region filling
	- determine number of subpolygons and hexes an edge creates as its added to a range
	- do not pick every subpolygon (or hex) along an edge for mountains. leave out a prescribed percentage of the subpolygons (and hexes). this way, the passableness of mountain ranges can be controlled without overfilling & then resizing

	- set a percentage of the land that should be hills
	- as long as regions are being filled in a random order, maxhillyness can be determined by how far from the hills goal we are
	- the goal is how many hills are left to create after the number of hills already created by mountain passes
	- a fraction of the hills can be reserved for region filling in advance
	- because mountain ranges are begun randomly, the prescribed number of hills created by mountain passes can be used to determine the chance of a pass being hilly. this has the added benefit of creating a variety of mountain regions

	- problem: if/how to include tiny island mountains and if/how to include one-subpolygon mountain clumps in the predetermined mountain budget

	- make number of mountain pass subpolygons per mountain range, not per edge. build the range by heuristically determining how many hexes the edge will add, and then after the range is done, go back to pick which subpolygons and hexes are passes? or pick the subpolygon passes on the fly with a mininum per range (1, probably) plus a chance per subpolygon?